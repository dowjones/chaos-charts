apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: app-compute-network-chaos
  namespace: litmus
  labels:
    subject: "app-compute-network-chaos_{{workflow.parameters.appNamespace}}"
spec:
  schedule: 0 7 * * 1-5
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 0
  timezone: America/New_York
  workflowSpec:
    arguments:
      parameters:
        - name: adminModeNamespace
          value: litmus
        - name: appNamespace
          value: djin-shared
    entrypoint: app-compute-network-chaos
    podGC:
      strategy: OnWorkflowSuccess
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccountName: argo-chaos
    templates:
      - name: app-compute-network-chaos
        steps:
          - - name: install-chaos-experiments
              template: install-chaos-experiments
          - - name: pod-delete
              template: pod-delete
          - - name: pod-memory-hog
              template: pod-memory-hog
          - - name: pod-cpu-hog
              template: pod-cpu-hog
          - - name: pod-network-loss
              template: pod-network-loss
          - - name: pod-network-latency
              template: pod-network-latency
          - - name: pod-network-corruption
              template: pod-network-corruption
          - - name: pod-network-duplication
              template: pod-network-duplication
          - - name: revert-chaos
              template: revert-chaos

      - name: install-chaos-experiments
        inputs:
          artifacts:
            - name: pod-delete
              path: /tmp/pod-delete.yaml
              raw:
                data: >
                  apiVersion: litmuschaos.io/v1alpha1

                  description:
                    message: |
                      Deletes a pod belonging to a deployment/statefulset/daemonset
                  kind: ChaosExperiment

                  metadata:
                    name: pod-delete
                    labels:
                      name: pod-delete
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-delete
                      command:
                        - /bin/bash
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "15"
                        - name: RAMP_TIME
                          value: "5"
                        - name: FORCE
                          value: "true"
                        - name: CHAOS_INTERVAL
                          value: "5"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: LIB
                          value: litmus
                        - name: TARGET_PODS
                          value: ""
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-delete
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/version: latest
            - name: pod-memory-hog
              path: /tmp/pod-memory-hog.yaml
              raw:
                data: >
                  apiVersion: litmuschaos.io/v1alpha1

                  description:
                    message: |
                      Injects memory consumption on pods belonging to an app deployment
                  kind: ChaosExperiment

                  metadata:
                    name: pod-memory-hog
                    labels:
                      name: pod-memory-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-memory-hog
                      command:
                        - /bin/bash
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: MEMORY_CONSUMPTION
                          value: "500"
                        - name: NUMBER_OF_WORKERS
                          value: "1"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: RAMP_TIME
                          value: "5"
                        - name: LIB
                          value: litmus
                        - name: LIB_IMAGE
                          value: litmuschaos/go-runner:latest
                        - name: STRESS_IMAGE
                          value: alexeiled/stress-ng:latest-ubuntu
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: SEQUENCE
                          value: parallel
                        - name: TARGET_PODS
                          value: ""
                      labels:
                        name: pod-memory-hog
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: latest
            - name: pod-cpu-hog
              path: /tmp/pod-cpu-hog.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      Injects cpu consumption on pods belonging to an app deployment
                  kind: ChaosExperiment
                  metadata:
                    name: pod-cpu-hog
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                            - "batch"
                            - "litmuschaos.io"
                          resources:
                            - "jobs"
                            - "pods"
                            - "pods/log"
                            - "events"
                            - "chaosengines"
                            - "chaosexperiments"
                            - "chaosresults"
                          verbs:
                            - "create"
                            - "list"
                            - "get"
                            - "patch"
                            - "update"
                            - "delete"
                      image: "litmuschaos/go-runner:latest"
                      imagePullPolicy: Always
                      args:
                      - -c
                      - ./experiments -name pod-cpu-hog
                      command:
                      - /bin/bash
                      env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "30"

                      - name: CHAOS_INTERVAL
                        value: "10"

                      ## Number of CPU cores to stress
                      - name: CPU_CORES
                        value: "1"

                      ## Percentage of total pods to target
                      - name: PODS_AFFECTED_PERC
                        value: ""

                      ## Period to wait before and after injection of chaos in sec
                      - name: RAMP_TIME
                        value: "5"

                      - name: LIB
                        value: "litmus"

                      - name: TARGET_POD
                        value: ""

                      labels:
                        name: pod-cpu-hog
            - name: pod-network-loss
              path: /tmp/pod-network-loss.yaml
              raw:
                data: >
                  apiVersion: litmuschaos.io/v1alpha1

                  description:
                    message: |
                      Injects network packet loss on pods belonging to an app deployment
                  kind: ChaosExperiment

                  metadata:
                    name: pod-network-loss
                    labels:
                      name: pod-network-loss
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-network-loss
                      command:
                        - /bin/bash
                      env:
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: LIB_IMAGE
                          value: litmuschaos/go-runner:latest
                        - name: NETWORK_INTERFACE
                          value: eth0
                        - name: TC_IMAGE
                          value: gaiadocker/iproute2
                        - name: NETWORK_PACKET_LOSS_PERCENTAGE
                          value: "100"
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: LIB
                          value: litmus
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: DESTINATION_IPS
                          value: ""
                        - name: DESTINATION_HOSTS
                          value: ""
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-network-loss
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: latest
            - name: pod-network-latency
              path: /tmp/pod-network-latency.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      Injects network latency on pods belonging to an app deployment
                  kind: ChaosExperiment
                  metadata:
                    name: pod-network-latency
                    labels:
                      name: pod-network-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-network-latency
                      command:
                        - /bin/bash
                      env:
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: NETWORK_INTERFACE
                          value: eth0
                        - name: LIB_IMAGE
                          value: litmuschaos/go-runner:latest
                        - name: TC_IMAGE
                          value: gaiadocker/iproute2
                        - name: NETWORK_LATENCY
                          value: "2000"
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: JITTER
                          value: "0"
                        - name: LIB
                          value: litmus
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: DESTINATION_IPS
                          value: ""
                        - name: DESTINATION_HOSTS
                          value: ""
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: NODE_LABEL
                          value: ""
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-network-latency
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: latest
            - name: pod-network-corruption
              path: /tmp/pod-network-corruption.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      Inject network packet corruption into application pod
                  kind: ChaosExperiment
                  metadata:
                    name: pod-network-corruption
                    labels:
                      name: pod-network-corruption
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-network-corruption
                      command:
                        - /bin/bash
                      env:
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: LIB_IMAGE
                          value: litmuschaos/go-runner:latest
                        - name: NETWORK_INTERFACE
                          value: eth0
                        - name: TC_IMAGE
                          value: gaiadocker/iproute2
                        - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                          value: "100"
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: LIB
                          value: litmus
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: NODE_LABEL
                          value: ""
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: DESTINATION_IPS
                          value: ""
                        - name: DESTINATION_HOSTS
                          value: ""
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-network-corruption
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: latest
            - name: pod-network-duplication
              path: /tmp/pod-network-duplication.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      Injects network packet duplication on pods belonging to an app deployment
                  kind: ChaosExperiment
                  metadata:
                    name: pod-network-duplication
                    labels:
                      name: pod-network-duplication
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: latest
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: litmuschaos/go-runner:latest
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-network-duplication
                      command:
                        - /bin/bash
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: TC_IMAGE
                          value: gaiadocker/iproute2
                        - name: NETWORK_INTERFACE
                          value: eth0
                        - name: NETWORK_PACKET_DUPLICATION_PERCENTAGE
                          value: "100"
                        - name: LIB
                          value: litmus
                        - name: TARGET_PODS
                          value: ""
                        - name: NODE_LABEL
                          value: ""
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: LIB_IMAGE
                          value: litmuschaos/go-runner:latest
                        - name: CONTAINER_RUNTIME
                          value: docker
                        - name: DESTINATION_IPS
                          value: ""
                        - name: DESTINATION_HOSTS
                          value: ""
                        - name: SOCKET_PATH
                          value: /var/run/docker.sock
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-network-duplication
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: latest
        container:
          args:
            - kubectl apply -f /tmp/pod-network-loss.yaml -n {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-network-latency.yaml -n {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-network-corruption.yaml -n {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-network-duplication.yaml -n {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-memory-hog.yaml -n  {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-cpu-hog.yaml -n  {{workflow.parameters.adminModeNamespace}}
              | kubectl apply -f /tmp/pod-delete.yaml -n {{workflow.parameters.adminModeNamespace}} | sleep 30
          command:
            - sh
            - -c
          image: litmuschaos/k8s:latest

      - name: pod-delete
        inputs:
          artifacts:
            - name: pod-delete
              path: /tmp/chaosengine-pod-delete.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    name: app-pod-delete
                    namespace: {{workflow.parameters.adminModeNamespace}}
                    labels:
                      context: "pod-delete_{{workflow.parameters.appNamespace}}"
                  spec:
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    engineState: active
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-delete
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "30"
                              - name: RAMP_TIME
                                value: "5"
                              - name: CHAOS_INTERVAL
                                value: "10"
                              - name: FORCE
                                value: "false"
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-delete.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: pod-memory-hog
        inputs:
          artifacts:
            - name: pod-memory-hog
              path: /tmp/chaosengine-pod-memory-hog.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    name: app-pod-memory-hog
                    namespace: {{workflow.parameters.adminModeNamespace}}
                    labels:
                      context: "pod-memory-hog_{{workflow.parameters.appNamespace}}"
                  spec:
                    engineState: active
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-memory-hog
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: RAMP_TIME
                                value: "5"
                              - name: MEMORY_CONSUMPTION
                                value: "500"
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-memory-hog.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: pod-cpu-hog
        inputs:
          artifacts:
            - name: pod-cpu-hog
              path: /tmp/chaosengine.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    name: app-pod-cpu-hog
                    namespace: {{workflow.parameters.adminModeNamespace}}
                    labels:
                      context: "pod-cpu-hog_{{workflow.parameters.appNamespace}}"
                  spec:
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    jobCleanUpPolicy: retain
                    engineState: 'active'
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-cpu-hog
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60" # in seconds
                              - name: RAMP_TIME
                                value: "5"
                              - name: CPU_CORES
                                value: "1"
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
        container:
          image: litmuschaos/litmus-checker:latest
          args:
            - -file=/tmp/chaosengine.yaml
            - -saveName=/tmp/engine-name

      - name: pod-network-loss
        inputs:
          artifacts:
            - name: pod-network-loss
              path: /tmp/chaosengine-pod-network-loss.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    name: app-pod-network-loss
                    labels:
                      context: "pod-network-loss_{{workflow.parameters.appNamespace}}"
                  spec:
                    engineState: active
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-network-loss
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: RAMP_TIME
                                value: "5"
                              - name: NETWORK_PACKET_LOSS_PERCENTAGE
                                value: "100"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-network-loss.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: pod-network-latency
        inputs:
          artifacts:
            - name: pod-network-latency
              path: /tmp/chaosengine-pod-network-latency.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    name: app-pod-network-latency
                    labels:
                      context: "pod-network-latency_{{workflow.parameters.appNamespace}}"
                  spec:
                    engineState: active
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-network-latency
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: RAMP_TIME
                                value: "5"
                              - name: NETWORK_LATENCY
                                value: "2000"
                              - name: JITTER
                                value: "0"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-network-latency.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: pod-network-corruption
        inputs:
          artifacts:
            - name: pod-network-corruption
              path: /tmp/chaosengine-pod-network-corruption.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    name: app-pod-network-corruption
                    labels:
                      context: "pod-network-corruption_{{workflow.parameters.appNamespace}}"
                  spec:
                    engineState: active
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-network-corruption
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: RAMP_TIME
                                value: "5"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
                              - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                                value: "100"
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-network-corruption.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: pod-network-duplication
        inputs:
          artifacts:
            - name: pod-network-duplication
              path: /tmp/chaosengine-pod-network-duplication.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    name: app-pod-network-duplication
                    labels:
                      context: "pod-network-duplication_{{workflow.parameters.appNamespace}}"
                  spec:
                    engineState: active
                    appinfo:
                      appns: djin-shared
                      applabel: appid=
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-network-duplication
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: RAMP_TIME
                                value: "5"
                              - name: NETWORK_PACKET_DUPLICATION_PERCENTAGE
                                value: "100"
                              - name: CONTAINER_RUNTIME
                                value: docker
                              - name: SOCKET_PATH
                                value: /var/run/docker.sock
                              - name: PODS_AFFECTED_PERC
                                value: "100"
                          probe: []
                    annotationCheck: "false"
        container:
          args:
            - -file=/tmp/chaosengine-pod-network-duplication.yaml
            - -saveName=/tmp/engine-name
          image: litmuschaos/litmus-checker:latest

      - name: revert-chaos
        container:
          image: litmuschaos/k8s:latest
          command: [sh, -c]
          args:
            [
              "kubectl delete chaosengine app-pod-delete app-pod-memory-hog app-pod-cpu-hog app-pod-network-loss app-pod-network-latency app-pod-network-corruption app-pod-network-duplication -n {{workflow.parameters.adminModeNamespace}}"
            ]
