apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: infra-node-compute-storage-chaos-workflow-
  namespace: litmus
  labels:
    subject: "infra-node-compute-storage-chaos_{{workflow.parameters.adminModeNamespace}}"
spec:
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
      - name: context
        value: "node-compute-storage-chaos"
  entrypoint: infra-node-compute-storage-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
    - name: infra-node-compute-storage-chaos
      steps:
      - - arguments: {}
          name: install-chaos-experiments
          template: install-chaos-experiments
      - - arguments: {}
          name: node-memory-hog
          template: node-memory-hog
      - - arguments: {}
          name: node-cpu-hog
          template: node-cpu-hog
      - - arguments: {}
        name: node-io-stress
        template: node-io-stress
      - - arguments: {}
          name: revert-chaos
          template: revert-chaos
    - name: install-chaos-experiments
      inputs:
        artifacts:
        - name: node-memory-hog
          path: /tmp/node-memory-hog.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              description:
                message: |
                  Give a memory hog on a node belonging to a deployment
              kind: ChaosExperiment
              metadata:
                name: node-memory-hog
                labels:
                  name: node-memory-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: chaosexperiment
                  app.kubernetes.io/version: 2.5.0
              spec:
                definition:
                  scope: Cluster
                  permissions:
                    - apiGroups:
                        - ""
                      resources:
                        - pods
                      verbs:
                        - create
                        - delete
                        - get
                        - list
                        - patch
                        - update
                        - deletecollection
                    - apiGroups:
                        - ""
                      resources:
                        - events
                      verbs:
                        - create
                        - get
                        - list
                        - patch
                        - update
                    - apiGroups:
                        - ""
                      resources:
                        - configmaps
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - ""
                      resources:
                        - pods/log
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - pods/exec
                      verbs:
                        - get
                        - list
                        - create
                    - apiGroups:
                        - batch
                      resources:
                        - jobs
                      verbs:
                        - create
                        - list
                        - get
                        - delete
                        - deletecollection
                    - apiGroups:
                        - litmuschaos.io
                      resources:
                        - chaosengines
                        - chaosexperiments
                        - chaosresults
                      verbs:
                        - create
                        - list
                        - get
                        - patch
                        - update
                        - delete
                    - apiGroups:
                        - ""
                      resources:
                        - nodes
                      verbs:
                        - get
                        - list
                  image: litmuschaos/go-runner:2.5.0
                  imagePullPolicy: Always
                  args:
                    - -c
                    - ./experiments -name node-memory-hog
                  command:
                    - /bin/bash
                  env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "120"
                    - name: MEMORY_CONSUMPTION_PERCENTAGE
                      value: ""
                    - name: MEMORY_CONSUMPTION_MEBIBYTES
                      value: ""
                    - name: NUMBER_OF_WORKERS
                      value: "1"
                    - name: TARGET_NODES
                      value: ""
                    - name: NODE_LABEL
                      value: ""
                    - name: RAMP_TIME
                      value: ""
                    - name: LIB
                      value: litmus
                    - name: LIB_IMAGE
                      value: litmuschaos/go-runner:2.5.0
                    - name: NODES_AFFECTED_PERC
                      value: ""
                    - name: SEQUENCE
                      value: parallel
                  labels:
                    name: node-memory-hog
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: experiment-job
                    app.kubernetes.io/version: 2.5.0
        - name: node-cpu-hog
          path: /tmp/node-cpu-hog.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              description:
                message: |
                  Give a cpu spike on a node belonging to a deployment
              kind: ChaosExperiment
              metadata:
                name: node-cpu-hog
              spec:
                definition:
                  scope: Cluster
                  permissions:
                    - apiGroups:
                        - ""
                        - "batch"
                        - "apps"
                        - "litmuschaos.io"
                      resources:
                        - "jobs"
                        - "pods"
                        - "pods/log"
                        - "events"
                        - "chaosengines"
                        - "chaosexperiments"
                        - "chaosresults"
                      verbs:
                        - "create"
                        - "list"
                        - "get"
                        - "patch"
                        - "update"
                        - "delete"
                    - apiGroups:
                        - ""
                      resources:
                        - "nodes"
                      verbs:
                        - "get"
                        - "list"
                  image: "litmuschaos/go-runner:latest"
                  imagePullPolicy: Always
                  args:
                  - -c
                  - ./experiments -name node-cpu-hog
                  command:
                  - /bin/bash
                  env:

                  - name: TOTAL_CHAOS_DURATION
                    value: '60'

                  # Period to wait before and after injection of chaos in sec
                  - name: RAMP_TIME
                    value: ''

                  ## ENTER THE NUMBER OF CORES OF CPU FOR CPU HOGGING
                  ## OPTIONAL VALUE IN CASE OF EMPTY VALUE IT WILL TAKE NODE CPU CAPACITY
                  - name: NODE_CPU_CORE
                    value: ''

                  # PROVIDE THE LIB HERE
                  # ONLY LITMUS SUPPORTED
                  - name: LIB
                    value: 'litmus'

                  # provide lib image
                  - name: LIB_IMAGE
                    value: 'litmuschaos/go-runner:latest'

                  labels:
                    name: node-cpu-hog
        - name: node-io-stress
          path: /tmp/node-io-stress.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              description:
                message: |
                  Give IO disk stress on a node belonging to a deployment
              kind: ChaosExperiment
              metadata:
                name: node-io-stress
                labels:
                  name: node-io-stress
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: chaosexperiment
                  app.kubernetes.io/version: latest
              spec:
                definition:
                  scope: Cluster
                  permissions:
                    - apiGroups:
                        - ""
                      resources:
                        - pods
                      verbs:
                        - create
                        - delete
                        - get
                        - list
                        - patch
                        - update
                        - deletecollection
                    - apiGroups:
                        - ""
                      resources:
                        - events
                      verbs:
                        - create
                        - get
                        - list
                        - patch
                        - update
                    - apiGroups:
                        - ""
                      resources:
                        - configmaps
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - ""
                      resources:
                        - pods/log
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - pods/exec
                      verbs:
                        - get
                        - list
                        - create
                    - apiGroups:
                        - batch
                      resources:
                        - jobs
                      verbs:
                        - create
                        - list
                        - get
                        - delete
                        - deletecollection
                    - apiGroups:
                        - litmuschaos.io
                      resources:
                        - chaosengines
                        - chaosexperiments
                        - chaosresults
                      verbs:
                        - create
                        - list
                        - get
                        - patch
                        - update
                        - delete
                    - apiGroups:
                        - ""
                      resources:
                        - nodes
                      verbs:
                        - get
                        - list
                  image: litmuschaos/go-runner:latest
                  imagePullPolicy: Always
                  args:
                    - -c
                    - ./experiments -name node-io-stress
                  command:
                    - /bin/bash
                  env:
                    - name: TOTAL_CHAOS_DURATION
                      value: "120"
                    - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                      value: "10"
                    - name: FILESYSTEM_UTILIZATION_BYTES
                      value: ""
                    - name: CPU
                      value: "1"
                    - name: NUMBER_OF_WORKERS
                      value: "4"
                    - name: VM_WORKERS
                      value: "1"
                    - name: TARGET_NODES
                      value: ""
                    - name: NODE_LABEL
                      value: ""
                    - name: RAMP_TIME
                      value: ""
                    - name: LIB
                      value: litmus
                    - name: LIB_IMAGE
                      value: litmuschaos/go-runner:latest
                    - name: NODES_AFFECTED_PERC
                      value: ""
                    - name: SEQUENCE
                      value: parallel
                  labels:
                    name: node-io-stress
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: experiment-job
                    app.kubernetes.io/version: latest
      container:
        args:
        - kubectl apply -f /tmp/node-memory-hog.yaml -n {{workflow.parameters.adminModeNamespace}}
          | kubectl apply -f /tmp/node-cpu-hog.yaml -n {{workflow.parameters.adminModeNamespace}}
          | kubectl apply -f /tmp/node-io-stress.yaml -n {{workflow.parameters.adminModeNamespace}} | sleep 30
        command:
        - sh
        - -c
        image: litmuschaos/k8s:latest

    - name: node-memory-hog
      inputs:
        artifacts:
        - name: node-memory-hog
          path: /tmp/chaosengine-node-memory-hog.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              kind: ChaosEngine
              metadata:
                namespace: "{{workflow.parameters.adminModeNamespace}}"
                name: infra-node-memory-hog
                labels:
                  context: "{{workflow.parameters.context}}"
              spec:
                engineState: active
                auxiliaryAppInfo: ""
                chaosServiceAccount: litmus-admin
                experiments:
                  - name: node-memory-hog
                    spec:
                      components:
                        env:
                          - name: TOTAL_CHAOS_DURATION
                            value: "120"
                          - name: MEMORY_CONSUMPTION_PERCENTAGE
                            value: "30"
                          - name: NODES_AFFECTED_PERC
                            value: ""
                          - name: TARGET_NODES
                            value: ""
                      probe: []
                annotationCheck: "false"
      container:
        args:
          - -file=/tmp/chaosengine-node-memory-hog.yaml
          - -saveName=/tmp/engine-name
        image: litmuschaos/litmus-checker:latest
      metadata:
        labels:
          weight: "7"
    - name: node-cpu-hog
      inputs:
        artifacts:
          - name: node-cpu-hog
            path: /tmp/chaosengine.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: infra-node-cpu-hog
                  namespace: {{workflow.parameters.adminModeNamespace}}
                  labels:
                    context: "{{workflow.parameters.context}}"
                spec:
                  jobCleanUpPolicy: retain
                  engineState: 'active'
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: node-cpu-hog
                      spec:
                        components:
                          env:
                            - name: NODE_CPU_CORE
                              value: '1'

                            - name: TOTAL_CHAOS_DURATION
                              value: '60' # in seconds
      container:
        args:
          - -file=/tmp/chaosengine.yaml
          - -saveName=/tmp/engine-name
        image: litmuschaos/litmus-checker:latest
        metadata:
          labels:
            weight: "7"
    - name: node-io-stress
      inputs:
        artifacts:
        - name: node-io-stress
          path: /tmp/chaosengine-node-io-stress.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              kind: ChaosEngine
              metadata:
                namespace: "{{workflow.parameters.adminModeNamespace}}"
                name: infra-node-io-stress
                labels:
                  context: "{{workflow.parameters.context}}"
              spec:
                engineState: active
                auxiliaryAppInfo: ""
                chaosServiceAccount: litmus-admin
                experiments:
                  - name: node-io-stress
                    spec:
                      components:
                        env:
                          - name: TOTAL_CHAOS_DURATION
                            value: "120"
                          - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                            value: "10"
                          - name: CPU
                            value: "1"
                          - name: NUMBER_OF_WORKERS
                            value: "4"
                          - name: NODES_AFFECTED_PERC
                            value: ""
                          - name: TARGET_NODES
                            value: ""
                      probe: []
                annotationCheck: "false"
      container:
        args:
          - -file=/tmp/chaosengine-node-io-stress.yaml
          - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
    metadata:
      labels:
        weight: "9"
    - name: revert-chaos
      container:
        image: litmuschaos/k8s:latest
        command: [sh, -c]
        args:
          [
            "kubectl delete chaosengine node-memory-hog-chaos node-cpu-hog-chaos -n {{workflow.parameters.adminModeNamespace}}",
          ]
